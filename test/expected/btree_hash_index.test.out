/*-------------------------------------------------------------------------
*
* Copyright (c) 2013, Max Planck Institute for Marine Microbiology
*
* This software is released under the PostgreSQL License
*
* Author: Michael Schneider <mschneid@mpi-bremen.de>
*
* IDENTIFICATION
*   sql/btree_hash_index.test.sql
*
*-------------------------------------------------------------------------
*/
DROP EXTENSION IF EXISTS postbis CASCADE;
NOTICE:  extension "postbis" does not exist, skipping
CREATE EXTENSION postbis;

SELECT 'ACGT'::dna_sequence = 'ACGT'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence = 'TGCA'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence != 'ACGT'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence != 'TGCA'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence < 'ACGT'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGG'::dna_sequence < 'ACGT'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence < 'ACGTA'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence < 'ACG'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence <= 'ACGG'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence <= 'ACGT'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence <= 'ACTT'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence <= 'ACGTA'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence <= 'ACG'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence > 'ACGT'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGG'::dna_sequence > 'ACGT'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence > 'ACGTA'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence > 'ACG'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence >= 'ACGG'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence >= 'ACGT'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)

SELECT 'ACGT'::dna_sequence >= 'ACTT'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence >= 'ACGTA'::dna_sequence; /* f */
 ?column? 
----------
 f
(1 row)

SELECT 'ACGT'::dna_sequence >= 'ACG'::dna_sequence; /* t */
 ?column? 
----------
 t
(1 row)


DROP TABLE IF EXISTS idx_test;
NOTICE:  table "idx_test" does not exist, skipping
CREATE TABLE idx_test (
  id serial primary key,
  raw_sequence text,
  len int,
  compressed_sequence dna_sequence
);
NOTICE:  CREATE TABLE will create implicit sequence "idx_test_id_seq" for serial column "idx_test.id"
NOTICE:  CREATE TABLE / PRIMARY KEY will create implicit index "idx_test_pkey" for table "idx_test"

/* 10,000 DNA sequences between 5,000 and 10,000nts */
INSERT INTO idx_test (raw_sequence, len, compressed_sequence)
  SELECT seq, len, seq::dna_sequence FROM (
    SELECT generate_sequence(dna_flc(), random_length) AS seq, random_length AS len FROM (
      SELECT (random() * 5000 + 5000)::int AS random_length, generate_series(1, 10000)
    ) AS b
  ) AS a;
INSERT INTO idx_test (raw_sequence, len, compressed_sequence)
  SELECT seq, char_length(seq), seq::dna_sequence FROM (
    SELECT 'AACGCTGACTAGAGCATCAGACT'::text AS seq
  ) AS a;

\timing on

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 Seq Scan on idx_test  (cost=0.00..2638.00 rows=528 width=8)
   Filter: (compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence)
(2 rows)

Time: 0,449 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
  id   | len 
-------+-----
 10001 |  23
(1 row)

Time: 40,223 ms

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
                         QUERY PLAN                          
-------------------------------------------------------------
 Seq Scan on idx_test  (cost=0.00..2638.00 rows=528 width=8)
   Filter: (compressed_sequence = 'ACGT'::dna_sequence)
(2 rows)

Time: 0,212 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
 id | len 
----+-----
(0 rows)

Time: 29,588 ms

CREATE INDEX seq_btree_idx ON idx_test USING btree (compressed_sequence);
Time: 21568,411 ms

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Bitmap Heap Scan on idx_test  (cost=104.85..276.27 rows=50 width=8)
   Recheck Cond: (compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence)
   ->  Bitmap Index Scan on seq_btree_idx  (cost=0.00..104.83 rows=50 width=0)
         Index Cond: (compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence)
(4 rows)

Time: 0,401 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
  id   | len 
-------+-----
 10001 |  23
(1 row)

Time: 0,184 ms

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
                                  QUERY PLAN                                   
-------------------------------------------------------------------------------
 Bitmap Heap Scan on idx_test  (cost=104.85..276.27 rows=50 width=8)
   Recheck Cond: (compressed_sequence = 'ACGT'::dna_sequence)
   ->  Bitmap Index Scan on seq_btree_idx  (cost=0.00..104.83 rows=50 width=0)
         Index Cond: (compressed_sequence = 'ACGT'::dna_sequence)
(4 rows)

Time: 0,125 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
 id | len 
----+-----
(0 rows)

Time: 0,149 ms

DROP INDEX seq_btree_idx;
Time: 5,515 ms

CREATE INDEX seq_hash_idx ON idx_test USING hash (compressed_sequence);
Time: 304,757 ms

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
                                     QUERY PLAN                                      
-------------------------------------------------------------------------------------
 Bitmap Heap Scan on idx_test  (cost=4.64..176.06 rows=50 width=8)
   Recheck Cond: (compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence)
   ->  Bitmap Index Scan on seq_hash_idx  (cost=0.00..4.63 rows=50 width=0)
         Index Cond: (compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence)
(4 rows)

Time: 0,342 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'AACGCTGACTAGAGCATCAGACT'::dna_sequence;
  id   | len 
-------+-----
 10001 |  23
(1 row)

Time: 0,119 ms

EXPLAIN SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
                                 QUERY PLAN                                 
----------------------------------------------------------------------------
 Bitmap Heap Scan on idx_test  (cost=4.64..176.06 rows=50 width=8)
   Recheck Cond: (compressed_sequence = 'ACGT'::dna_sequence)
   ->  Bitmap Index Scan on seq_hash_idx  (cost=0.00..4.63 rows=50 width=0)
         Index Cond: (compressed_sequence = 'ACGT'::dna_sequence)
(4 rows)

Time: 0,138 ms
SELECT id, len FROM idx_test WHERE compressed_sequence = 'ACGT'::dna_sequence;
 id | len 
----+-----
(0 rows)

Time: 0,104 ms

DROP INDEX seq_hash_idx;
Time: 0,635 ms

DROP TABLE idx_test;
Time: 8,719 ms


